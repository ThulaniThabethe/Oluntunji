@model WebApplication1.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6 offset-md-3">
            <div class="card">
                <div class="card-header">
                    <h2>@ViewBag.Title</h2>
                </div>
                <div class="card-body">
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @ViewBag.Message
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="mb-3">
                            @Html.LabelFor(model => model.CurrentPassword, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.NewPassword, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                            <small class="form-text text-muted">Password must be at least 6 characters long</small>
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-flex justify-content-between">
                            @Html.ActionLink("Back to Profile", "Profile", null, new { @class = "btn btn-secondary" })
                            <button type="submit" class="btn btn-primary">Change Password</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}