@model WebApplication1.ViewModels.LoginViewModel
@{
    ViewBag.Title = "Login - South African Bookstore";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow-lg border-0 rounded-3">
                <div class="card-body p-5">
                    <div class="text-center mb-4">
                        <div class="mb-3">
                            <i class="fas fa-book-open fa-3x text-primary"></i>
                        </div>
                        <h2 class="fw-bold text-dark">Welcome Back</h2>
                        <p class="text-muted">Sign in to your account</p>
                    </div>

                    @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger alert-dismissible fade show" })

                        <div class="mb-4">
                            @Html.LabelFor(m => m.Email, new { @class = "form-label fw-semibold" })
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-lg", placeholder = "Enter your email", required = "required" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "invalid-feedback d-block" })
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(m => m.Password, new { @class = "form-label fw-semibold" })
                            <div class="input-group">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-lg", placeholder = "Enter your password", required = "required", id = "passwordField" })
                                <button class="btn btn-outline-secondary" type="button" id="togglePassword">
                                    <i class="fas fa-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "invalid-feedback d-block" })
                        </div>

                        <div class="mb-4 form-check">
                            @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input" })
                            @Html.LabelFor(m => m.RememberMe, new { @class = "form-check-label" })
                        </div>

                        <div class="d-grid mb-4">
                            <button type="submit" class="btn btn-primary btn-lg fw-semibold">
                                <i class="fas fa-sign-in-alt me-2"></i>Sign In
                            </button>
                        </div>

                        <div class="text-center">
                            <p class="mb-2">
                                <a href="@Url.Action("ForgotPassword", "Account")" class="text-decoration-none text-primary fw-semibold">Forgot your password?</a>
                            </p>
                            <p class="mb-0">
                                Don't have an account? 
                                <a href="@Url.Action("Register", "Account")" class="text-decoration-none text-primary fw-semibold">Sign up here</a>
                            </p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .card {
            background: linear-gradient(135deg, #ffffff 0%, #f8f9fa 100%);
        }
        
        .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #0d6efd 0%, #0b5ed7 100%);
            border: none;
            transition: all 0.3s ease;
        }
        
        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 15px rgba(13, 110, 253, 0.3);
        }
        
        .invalid-feedback {
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
        
        .alert {
            border-radius: 0.5rem;
        }
    </style>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            // Toggle password visibility
            $('#togglePassword').click(function() {
                const passwordField = $('#passwordField');
                const fieldType = passwordField.attr('type');
                const toggleIcon = $(this).find('i');
                
                if (fieldType === 'password') {
                    passwordField.attr('type', 'text');
                    toggleIcon.removeClass('fa-eye').addClass('fa-eye-slash');
                } else {
                    passwordField.attr('type', 'password');
                    toggleIcon.removeClass('fa-eye-slash').addClass('fa-eye');
                }
            });
            
            // Add input validation styling
            $('.form-control').on('input', function() {
                if ($(this).val()) {
                    $(this).addClass('is-valid').removeClass('is-invalid');
                } else {
                    $(this).removeClass('is-valid').addClass('is-invalid');
                }
            });
            
            // Auto-hide validation summary after 5 seconds
            setTimeout(function() {
                $('.alert-danger').fadeOut('slow');
            }, 5000);
        });
    </script>
}