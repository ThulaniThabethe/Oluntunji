@model WebApplication1.ViewModels.CustomerOrderHistoryViewModel

@{
    ViewData["Title"] = "Order History";
}

<div class="container py-5">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="display-6 mb-2">
                <i class="fas fa-history me-3"></i>Order History
            </h2>
            <p class="text-muted mb-0">View and track all your orders in one place</p>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            @{
                ViewBag.StatsIcon = "bi-bag";
                ViewBag.StatsTitle = "Total Orders";
                ViewBag.StatsValue = Model.TotalOrders.ToString();
                ViewBag.StatsColor = "primary";
            }
            @Html.Partial("_StatsCard")
        </div>
        <div class="col-md-3 mb-3">
            @{
                ViewBag.StatsIcon = "bi-coin";
                ViewBag.StatsTitle = "Total Spent";
                ViewBag.StatsValue = $"R {Model.TotalSpent:F2}";
                ViewBag.StatsColor = "success";
            }
            @Html.Partial("_StatsCard")
        </div>
        <div class="col-md-3 mb-3">
            @{
                ViewBag.StatsIcon = "bi-calendar";
                ViewBag.StatsTitle = "Last Order";
                ViewBag.StatsValue = Model.LastOrderDate.ToString("MMM dd");
                ViewBag.StatsColor = "info";
            }
            @Html.Partial("_StatsCard")
        </div>
        <div class="col-md-3 mb-3">
            @{
                ViewBag.StatsIcon = "bi-book";
                ViewBag.StatsTitle = "Top Category";
                ViewBag.StatsValue = Model.MostPurchasedCategory;
                ViewBag.StatsColor = "warning";
            }
            @Html.Partial("_StatsCard")
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">
                <i class="fas fa-filter me-2"></i>Filter Orders
            </h5>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-3">
                    <label for="orderNumber" class="form-label">Order Number</label>
                    <input type="text" class="form-control" id="orderNumber" name="orderNumber" placeholder="Enter order number">
                </div>
                <div class="col-md-3">
                    <label for="startDate" class="form-label">From Date</label>
                    <input type="date" class="form-control" id="startDate" name="startDate">
                </div>
                <div class="col-md-3">
                    <label for="endDate" class="form-label">To Date</label>
                    <input type="date" class="form-control" id="endDate" name="endDate">
                </div>
                <div class="col-md-3">
                    <label for="orderStatus" class="form-label">Order Status</label>
                    <select class="form-select" id="orderStatus" name="orderStatus">
                        <option value="">All Statuses</option>
                        <option value="Pending">Pending</option>
                        <option value="Processing">Processing</option>
                        <option value="Shipped">Shipped</option>
                        <option value="Delivered">Delivered</option>
                        <option value="Cancelled">Cancelled</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="paymentStatus" class="form-label">Payment Status</label>
                    <select class="form-select" id="paymentStatus" name="paymentStatus">
                        <option value="">All Payments</option>
                        <option value="Pending">Pending</option>
                        <option value="Paid">Paid</option>
                        <option value="Failed">Failed</option>
                        <option value="Refunded">Refunded</option>
                    </select>
                </div>
                <div class="col-md-6">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-1"></i>Apply Filters
                        </button>
                        <a href="/Order/OrderHistory" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i>Clear
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Orders List -->
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-list me-2"></i>Your Orders
                </h5>
                <span class="badge bg-light text-primary">@Model.Orders.Count orders</span>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Orders != null && Model.Orders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>Order #</th>
                                <th>Date</th>
                                <th>Items</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th>Payment</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model.Orders.OrderByDescending(o => o.OrderDate))
                            {
                                <tr>
                                    <td>
                                        <strong>@order.OrderNumber</strong>
                                    </td>
                                    <td>
                                        <div>@order.OrderDate.ToString("dd MMM yyyy")</div>
                                        <small class="text-muted">@order.OrderDate.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <span class="badge bg-secondary">@order.ItemCount items</span>
                                    </td>
                                    <td>
                                        <strong>R @order.TotalAmount.ToString("F2")</strong>
                                    </td>
                                    <td>
                                        @{
                                            var statusBadge = order.OrderStatus switch
                                            {
                                                "Pending" => "warning",
                                                "Processing" => "info",
                                                "Shipped" => "primary",
                                                "Delivered" => "success",
                                                "Cancelled" => "danger",
                                                _ => "secondary"
                                            };
                                        }
                                        <span class="badge bg-@statusBadge">@order.OrderStatus</span>
                                    </td>
                                    <td>
                                        @{
                                            var paymentBadge = order.PaymentStatus switch
                                            {
                                                "Pending" => "warning",
                                                "Paid" => "success",
                                                "Failed" => "danger",
                                                "Refunded" => "secondary",
                                                _ => "secondary"
                                            };
                                        }
                                        <span class="badge bg-@paymentBadge">@order.PaymentStatus</span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="/Order/OrderDetails/@order.OrderId" class="btn btn-sm btn-outline-primary" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (order.OrderStatus == "Pending" || order.OrderStatus == "Processing")
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger" onclick="cancelOrder(@order.OrderId)" title="Cancel Order">
                                                    <i class="fas fa-times"></i>
                                                </button>
                                            }
                                            @if (order.OrderStatus == "Delivered")
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-success" onclick="reorder(@order.OrderId)" title="Reorder">
                                                    <i class="fas fa-redo"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                @{
                    ViewBag.EmptyIcon = "bi-cart-x";
                    ViewBag.EmptyTitle = "No orders found";
                    ViewBag.EmptyMessage = "You haven't placed any orders yet.";
                    ViewBag.EmptyActionText = "Start Shopping";
                    ViewBag.EmptyActionUrl = "/";
                    ViewBag.EmptyActionIcon = "bi-bag";
                }
                @Html.Partial("_EmptyState")
            }
        </div>
    </div>
</div>

@section Styles {
    <style>
        .stats-icon {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin: 0 auto;
        }
        
        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
        }
        
        .table-hover tbody tr:hover {
            background-color: #f8f9fa;
            cursor: pointer;
        }
        
        .btn-group .btn {
            border-radius: 6px !important;
        }
        
        .btn-group .btn:first-child {
            border-top-right-radius: 0 !important;
            border-bottom-right-radius: 0 !important;
        }
        
        .btn-group .btn:last-child {
            border-top-left-radius: 0 !important;
            border-bottom-left-radius: 0 !important;
        }
        
        .btn-group .btn:not(:first-child):not(:last-child) {
            border-radius: 0 !important;
        }
        
        .form-control, .form-select {
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            padding: 0.75rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
        
        .btn-primary {
            background: linear-gradient(135deg, #007bff, #0056b3);
            border: none;
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 600;
        }
        
        .btn-primary:hover {
            background: linear-gradient(135deg, #0056b3, #004085);
        }
        
        .btn-outline-primary {
            border-radius: 6px;
        }
        
        .btn-outline-danger {
            border-radius: 6px;
        }
        
        .btn-outline-success {
            border-radius: 6px;
        }
        
        .badge {
            font-size: 0.875rem;
            padding: 0.5rem 0.75rem;
        }
        
        @@media (max-width: 768px) {
            .stats-icon {
                width: 50px;
                height: 50px;
                font-size: 1.25rem;
            }
            
            .table-responsive {
                font-size: 0.875rem;
            }
            
            .btn-group {
                flex-direction: column;
            }
            
            .btn-group .btn {
                border-radius: 6px !important;
                margin-bottom: 2px;
            }
        }
    </style>
}

@section Scripts {
    <script>
        function cancelOrder(orderId) {
            if (confirm('Are you sure you want to cancel this order?')) {
                $.ajax({
                    url: '/Order/CancelOrder',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function(result) {
                        if (result.success) {
                            toastr.success('Order cancelled successfully');
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            toastr.error(result.message || 'Failed to cancel order');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while cancelling the order');
                    }
                });
            }
        }

        function reorder(orderId) {
            if (confirm('Would you like to reorder the items from this order?')) {
                $.ajax({
                    url: '/Order/Reorder',
                    type: 'POST',
                    data: { orderId: orderId },
                    success: function(result) {
                        if (result.success) {
                            toastr.success('Items added to cart successfully');
                            setTimeout(function() {
                                window.location.href = '/Cart';
                            }, 1500);
                        } else {
                            toastr.error(result.message || 'Failed to reorder items');
                        }
                    },
                    error: function() {
                        toastr.error('An error occurred while reordering');
                    }
                });
            }
        }

        $(document).ready(function() {
            // Add fade-in animation to cards
            $('.card').hide().fadeIn(800);
            
            // Auto-submit form on filter change (optional)
            $('#orderStatus, #paymentStatus').change(function() {
                // Uncomment the line below to enable auto-submit
                // $(this).closest('form').submit();
            });
            
            // Add click tracking for analytics
            $('a[href*="/Order/OrderDetails/"]').on('click', function() {
                console.log('User clicked on order details link');
            });
        });
    </script>
}