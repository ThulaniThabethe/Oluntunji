@model List<WebApplication1.Models.User>
@{
    ViewBag.Title = "Manage Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <h2 class="mb-4">@ViewBag.Title</h2>
            
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">User Management</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Status</th>
                                    <th>Registration Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-circle bg-secondary text-white me-2" 
                                                     style="width: 32px; height: 32px; border-radius: 50%; display: flex; align-items: center; justify-content: center;">
                                                    @(user.FirstName != null ? user.FirstName.Substring(0, 1).ToUpper() : "U")
                                                </div>
                                                <div>
                                                    <div class="fw-bold">@user.FirstName @user.LastName</div>
                                                    <small class="text-muted">ID: @user.UserId</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@user.Email</td>
                                        <td>
                                            <span class="badge bg-info">@user.Role</span>
                                        </td>
                                        <td>
                                            @if (user.IsActive)
                                            {
                                                <span class="badge bg-success">Active</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">Inactive</span>
                                            }
                                        </td>
                                        <td>@user.CreatedDate.ToString("MMM dd, yyyy")</td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                        onclick="editUserRole(@user.UserId, '@user.Role')"
                                                        title="Change Role">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                                <button type="button" class="btn btn-sm @(user.IsActive ? "btn-outline-danger" : "btn-outline-success")" 
                                                        onclick="toggleUserStatus(@user.UserId, @user.IsActive.ToString().ToLower())"
                                                        title="@(user.IsActive ? "Deactivate" : "Activate")">
                                                    <i class="bi @(user.IsActive ? "bi-person-x" : "bi-person-check")"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Edit Role Modal -->
<div class="modal fade" id="editRoleModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Change User Role</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editRoleForm">
                    <input type="hidden" id="userId" />
                    <div class="mb-3">
                        <label for="userRole" class="form-label">Select Role</label>
                        <select class="form-select" id="userRole" required>
                            <option value="Customer">Customer</option>
                            <option value="Seller">Seller</option>
                            <option value="Employee">Employee</option>
                            <option value="Admin">Admin</option>
                        </select>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="saveUserRole()">Save Changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function editUserRole(userId, currentRole) {
            $('#userId').val(userId);
            $('#userRole').val(currentRole);
            $('#editRoleModal').modal('show');
        }

        function saveUserRole() {
            var userId = $('#userId').val();
            var newRole = $('#userRole').val();

            $.ajax({
                url: '@Url.Action("UpdateUserRole", "Profile")',
                type: 'POST',
                data: {
                    userId: userId,
                    newRole: newRole,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        $('#editRoleModal').modal('hide');
                        location.reload();
                    } else {
                        alert('Error: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while updating the user role.');
                }
            });
        }

        function toggleUserStatus(userId, isActive) {
            if (confirm('Are you sure you want to ' + (isActive ? 'deactivate' : 'activate') + ' this user?')) {
                $.ajax({
                    url: '@Url.Action("ToggleUserStatus", "Profile")',
                    type: 'POST',
                    data: {
                        userId: userId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Error: ' + response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while updating the user status.');
                    }
                });
            }
        }
    </script>
}