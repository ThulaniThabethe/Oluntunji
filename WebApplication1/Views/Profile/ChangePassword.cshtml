@model WebApplication1.ViewModels.ChangePasswordViewModel

@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="bi bi-key"></i> Change Password
                    </h4>
                </div>
                <div class="card-body">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="bi bi-check-circle"></i> @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @if (TempData["Error"] != null)
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle"></i> @TempData["Error"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    }

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="mb-3">
                            @Html.LabelFor(m => m.CurrentPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-control", placeholder = "Enter your current password" })
                            @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-3">
                            @Html.LabelFor(m => m.NewPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "Enter your new password" })
                            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                            <small class="form-text text-muted">Password must be at least 6 characters long.</small>
                        </div>

                        <div class="mb-4">
                            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "form-label" })
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm your new password" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-key"></i> Change Password
                            </button>
                            <a href="@Url.Action("Index", "Profile")" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Profile
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}