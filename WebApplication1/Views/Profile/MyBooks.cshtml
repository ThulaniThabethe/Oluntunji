@model WebApplication1.ViewModels.MyBooksViewModel

@{
    ViewBag.Title = "My Books";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h2 text-primary fw-bold">
                    <i class="fas fa-book me-2"></i>My Books
                </h1>
                <a href="@Url.Action("Create", "Books")" class="btn btn-success">
                    <i class="fas fa-plus me-2"></i>Add New Book
                </a>
            </div>

            <!-- Breadcrumb -->
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Profile")">Profile</a></li>
                    <li class="breadcrumb-item active">My Books</li>
                </ol>
            </nav>

            <!-- Statistics Cards -->
            <div class="row mb-4">
                <div class="col-md-3">
                    <div class="card border-start border-primary border-4">
                        <div class="card-body">
                            <h5 class="card-title text-primary">Total Books</h5>
                            <h2 class="mb-0">@Model.TotalBooks</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-start border-success border-4">
                        <div class="card-body">
                            <h5 class="card-title text-success">In Stock</h5>
                            <h2 class="mb-0">@Model.BooksInStock</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-start border-warning border-4">
                        <div class="card-body">
                            <h5 class="card-title text-warning">Low Stock</h5>
                            <h2 class="mb-0">@Model.LowStockBooks</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="card border-start border-danger border-4">
                        <div class="card-body">
                            <h5 class="card-title text-danger">Out of Stock</h5>
                            <h2 class="mb-0">@Model.OutOfStockBooks</h2>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Search and Filter Controls -->
            <div class="card mb-4">
                <div class="card-body">
                    <form method="get" action="@Url.Action("MyBooks")" class="row g-3">
                        <div class="col-md-4">
                            <label for="search" class="form-label">Search Books</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="search" name="search" 
                                       value="@Model.SearchTerm" placeholder="Search by title or author">
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <label for="status" class="form-label">Filter by Status</label>
                            <select class="form-select" id="status" name="status">
                                <option value="">All Books</option>
                                <option value="instock" @(Model.StatusFilter == "instock" ? "selected" : "")>In Stock (>10)</option>
                                <option value="lowstock" @(Model.StatusFilter == "lowstock" ? "selected" : "")>Low Stock (1-10)</option>
                                <option value="outofstock" @(Model.StatusFilter == "outofstock" ? "selected" : "")>Out of Stock</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label for="sort" class="form-label">Sort by</label>
                            <select class="form-select" id="sort" name="sort">
                                <option value="title" @(Model.SortBy == "title" ? "selected" : "")>Title</option>
                                <option value="author" @(Model.SortBy == "author" ? "selected" : "")>Author</option>
                                <option value="stock" @(Model.SortBy == "stock" ? "selected" : "")>Stock Level</option>
                                <option value="price" @(Model.SortBy == "price" ? "selected" : "")>Price</option>
                                <option value="date" @(Model.SortBy == "date" ? "selected" : "")>Date Added</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">&nbsp;</label>
                            <button type="submit" class="btn btn-primary w-100">
                                <i class="fas fa-filter me-1"></i>Apply
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Books Table -->
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Book Listings</h5>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0" id="booksTable">
                            <thead class="table-light">
                                <tr>
                                    <th width="80">Cover</th>
                                    <th>Title & Author</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th>Status</th>
                                    <th>Date Added</th>
                                    <th width="150">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var book in Model.Books)
                                {
                                    var statusColor = book.StockQuantity <= 0 ? "danger" : book.StockQuantity <= 10 ? "warning" : "success";
                                    var statusText = book.StockQuantity <= 0 ? "Out of Stock" : book.StockQuantity <= 10 ? "Low Stock" : "In Stock";
                                    
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                            {
                                                <img src="@book.CoverImageUrl" alt="@book.Title" class="img-thumbnail" style="width: 60px; height: 80px; object-fit: cover;">
                                            }
                                            else
                                            {
                                                <div class="bg-light d-flex align-items-center justify-content-center" style="width: 60px; height: 80px;">
                                                    <i class="fas fa-book text-muted"></i>
                                                </div>
                                            }
                                        </td>
                                        <td>
                                            <strong>@book.Title</strong>
                                            <br>
                                            <small class="text-muted">by @book.Author</small>
                                        </td>
                                        <td>
                                            <strong class="text-success">R @book.Price.ToString("F2")</strong>
                                        </td>
                                        <td>
                                            <span class="badge bg-@statusColor">@book.StockQuantity</span>
                                        </td>
                                        <td>
                                            <span class="badge bg-@statusColor">@statusText</span>
                                        </td>
                                        <td>
                                            <small>@book.CreatedDate.ToString("MMM dd, yyyy")</small>
                                        </td>
                                        <td>
                                            <div class="btn-group-vertical w-100">
                                                <a href="@Url.Action("Details", "Book", new { id = book.BookId })" class="btn btn-outline-primary btn-sm mb-1">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                <a href="@Url.Action("EditBook", "Profile", new { id = book.BookId })" class="btn btn-outline-warning btn-sm mb-1">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                                <button type="button" class="btn btn-outline-danger btn-sm" onclick="deleteBook(@book.BookId, '@book.Title')">
                                                    <i class="fas fa-trash"></i> Delete
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                
                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center mb-0">
                                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("MyBooks", new { page = Model.CurrentPage - 1, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">
                                        Previous
                                    </a>
                                </li>
                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("MyBooks", new { page = i, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">
                                            @i
                                        </a>
                                    </li>
                                }
                                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                    <a class="page-link" href="@Url.Action("MyBooks", new { page = Model.CurrentPage + 1, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">
                                        Next
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteBook(bookId, bookTitle) {
            if (confirm('Are you sure you want to delete "' + bookTitle + '"? This action cannot be undone.')) {
                // Use standard form submission for delete
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("DeleteBook", "Books")';
                
                // Add book ID
                var idField = document.createElement('input');
                idField.type = 'hidden';
                idField.name = 'id';
                idField.value = bookId;
                form.appendChild(idField);
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>

    <style>
        .btn-group-vertical .btn {
            margin-bottom: 0.25rem;
        }
        
        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.02);
        }
    </style>
}