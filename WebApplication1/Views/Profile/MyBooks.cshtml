@model WebApplication1.ViewModels.MyBooksViewModel

@{
    ViewBag.Title = "My Books";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <h2>@ViewBag.Title</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Profile")">Profile</a></li>
                    <li class="breadcrumb-item active">My Books</li>
                </ol>
            </nav>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card text-white bg-primary">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title">Total Books</h6>
                            <h3 class="card-text">@Model.TotalBooks</h3>
                        </div>
                        <div class="fs-1">
                            <i class="fas fa-book"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-success">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title">In Stock</h6>
                            <h3 class="card-text">@Model.BooksInStock</h3>
                        </div>
                        <div class="fs-1">
                            <i class="fas fa-check-circle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-warning">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title">Low Stock</h6>
                            <h3 class="card-text">@Model.LowStockBooks</h3>
                        </div>
                        <div class="fs-1">
                            <i class="fas fa-exclamation-triangle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-white bg-danger">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="card-title">Out of Stock</h6>
                            <h3 class="card-text">@Model.OutOfStockBooks</h3>
                        </div>
                        <div class="fs-1">
                            <i class="fas fa-times-circle"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter -->
    <div class="row mb-3">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <form method="get" action="@Url.Action("MyBooks", "Profile")">
                        <div class="row">
                            <div class="col-md-4">
                                <label for="search" class="form-label">Search</label>
                                <input type="text" class="form-control" id="search" name="search" value="@Model.SearchTerm" placeholder="Search by title or author...">
                            </div>
                            <div class="col-md-3">
                                <label for="status" class="form-label">Stock Status</label>
                                <select class="form-select" id="status" name="status">
                                    <option value="">All Status</option>
                                    <option value="instock" @(Model.StatusFilter == "instock" ? "selected" : "")>In Stock</option>
                                    <option value="lowstock" @(Model.StatusFilter == "lowstock" ? "selected" : "")>Low Stock</option>
                                    <option value="outofstock" @(Model.StatusFilter == "outofstock" ? "selected" : "")>Out of Stock</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="sort" class="form-label">Sort By</label>
                                <select class="form-select" id="sort" name="sort">
                                    <option value="title" @(Model.SortBy == "title" ? "selected" : "")>Title</option>
                                    <option value="author" @(Model.SortBy == "author" ? "selected" : "")>Author</option>
                                    <option value="stock" @(Model.SortBy == "stock" ? "selected" : "")>Stock Quantity</option>
                                    <option value="price" @(Model.SortBy == "price" ? "selected" : "")>Price</option>
                                    <option value="date" @(Model.SortBy == "date" ? "selected" : "")>Date Added</option>
                                </select>
                            </div>
                            <div class="col-md-2 d-flex align-items-end">
                                <button type="submit" class="btn btn-primary w-100">
                                    <i class="fas fa-search"></i> Filter
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add New Book Button -->
    <div class="row mb-3">
        <div class="col-md-12">
            <a href="@Url.Action("AddBook", "Books")" class="btn btn-success">
                <i class="fas fa-plus"></i> Add New Book
            </a>
        </div>
    </div>

    <!-- Books Table -->
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <i class="fas fa-list"></i> My Books
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.Books == null || !Model.Books.Any())
                    {
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle"></i> No books found. 
                            <a href="@Url.Action("AddBook", "Books")" class="alert-link">Add your first book</a>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover" id="booksTable">
                                <thead>
                                    <tr>
                                        <th>Cover</th>
                                        <th>Title</th>
                                        <th>Author</th>
                                        <th>Price</th>
                                        <th>Stock</th>
                                        <th>Status</th>
                                        <th>Date Added</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var book in Model.Books)
                                    {
                                        <tr>
                                            <td>
                                                @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                                {
                                                    <img src="@book.CoverImageUrl" alt="@book.Title" class="img-thumbnail" style="width: 50px; height: 70px; object-fit: cover;">
                                                }
                                                else
                                                {
                                                    <div class="bg-secondary text-white d-flex align-items-center justify-content-center" style="width: 50px; height: 70px;">
                                                        <i class="fas fa-book"></i>
                                                    </div>
                                                }
                                            </td>
                                            <td>
                                                <strong>@book.Title</strong>
                                                <br />
                                                <small class="text-muted">ISBN: @book.ISBN</small>
                                            </td>
                                            <td>@book.Author</td>
                                            <td>
                                                <strong>R @book.Price.ToString("F2")</strong>
                                            </td>
                                            <td>
                                                <span class="badge bg-@GetStockColor(book.StockQuantity)">@book.StockQuantity</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-@GetStatusColor(book.StockQuantity)">@GetStatusText(book.StockQuantity)</span>
                                            </td>
                                            <td>
                                                <small>@book.DateAdded.ToString("MMM dd, yyyy")</small>
                                            </td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <a href="@Url.Action("Details", "Book", new { id = book.BookId })" class="btn btn-sm btn-outline-primary" title="View">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("EditBook", "Profile", new { id = book.BookId })" class="btn btn-sm btn-outline-warning" title="Edit">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-danger" onclick="confirmDelete('@book.BookId', '@book.Title')" title="Delete">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.TotalPages > 1)
                        {
                            <nav aria-label="Page navigation">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("MyBooks", new { page = Model.CurrentPage - 1, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">Previous</a>
                                    </li>
                                    @for (int i = 1; i <= Model.TotalPages; i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("MyBooks", new { page = i, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">@i</a>
                                        </li>
                                    }
                                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("MyBooks", new { page = Model.CurrentPage + 1, search = Model.SearchTerm, status = Model.StatusFilter, sort = Model.SortBy })">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string GetStatusColor(int stock)
    {
        if (stock <= 0)
            return "danger";
        if (stock < 10)
            return "warning";
        return "success";
    }

    private string GetStatusText(int stock)
    {
        if (stock <= 0)
            return "Out of Stock";
        if (stock < 10)
            return "Low Stock";
        return "In Stock";
    }
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize DataTable for better functionality
            $('#booksTable').DataTable({
                "paging": false,
                "searching": false,
                "info": false,
                "order": [[2, "asc"]] // Sort by title by default
            });
        });

        function confirmDelete(bookId, bookTitle) {
            if (confirm(`Are you sure you want to delete "${bookTitle}"? This action cannot be undone.`)) {
                // Create a form and submit the delete request
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("DeleteBook", "Books")';
                
                var input = document.createElement('input');
                input.type = 'hidden';
                input.name = 'id';
                input.value = bookId;
                form.appendChild(input);
                
                // Add anti-forgery token
                var token = document.createElement('input');
                token.type = 'hidden';
                token.name = '__RequestVerificationToken';
                token.value = '@Html.AntiForgeryToken()';
                form.appendChild(token);
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}