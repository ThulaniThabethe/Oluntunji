@model IEnumerable<WebApplication1.Models.Book>
@{
    ViewBag.Title = "Manage Books - Connect2us";
    Layout = "~/Views/Shared/_Layout.cshtml";
    // Force recompilation v1
}

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <h1 class="h3 mb-0">
                    <i class="fas fa-book me-2"></i>Manage Books
                </h1>
                <div class="btn-group">
                    <a href="@Url.Action("Create", "Books")" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>Add New Book
                    </a>
                    <a href="@Url.Action("LowStock", "Books")" class="btn btn-warning">
                        <i class="fas fa-exclamation-triangle me-1"></i>Low Stock
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title">Total Books</h5>
                            <h3 class="mb-0">@Model.Count()</h3>
                        </div>
                        <i class="fas fa-book fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title">Available</h5>
                            <h3 class="mb-0">@Model.Count(b => b.IsAvailable)</h3>
                        </div>
                        <i class="fas fa-check-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title">Low Stock</h5>
                            <h3 class="mb-0">@Model.Count(b => b.StockQuantity <= 5 && b.IsAvailable)</h3>
                        </div>
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h5 class="card-title">Featured</h5>
                            <h3 class="mb-0">@Model.Count(b => b.IsFeatured)</h3>
                        </div>
                        <i class="fas fa-star fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Books Table -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-table me-2"></i>Book Inventory
                    </h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="booksTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Cover</th>
                                    <th>Title</th>
                                    <th>Author</th>
                                    <th>Category</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th>Status</th>
                                    <th>Created</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var book in Model.OrderByDescending(b => b.CreatedDate))
                                {
                                    <tr>
                                        <td>
                                            @if (!string.IsNullOrEmpty(book.CoverImageUrl))
                                            {
                                                <img src="@book.CoverImageUrl" alt="@book.Title" 
                                                     style="width: 50px; height: 75px; object-fit: cover;" 
                                                     onerror="this.src='https://via.placeholder.com/50x75?text=No+Image'">
                                            }
                                            else
                                            {
                                                <img src="https://via.placeholder.com/50x75?text=No+Image" 
                                                     alt="@book.Title" style="width: 50px; height: 75px; object-fit: cover;">
                                            }
                                        </td>
                                        <td>
                                            <strong>@book.Title</strong>
                                            @if (book.IsFeatured)
                                            {
                                                <span class="badge bg-warning text-dark ms-1">Featured</span>
                                            }
                                        </td>
                                        <td>@book.Author</td>
                                        <td>
                                            <span class="badge bg-light text-dark">@book.Category</span>
                                            @if (!string.IsNullOrEmpty(book.Genre))
                                            {
                                                <span class="badge bg-light text-dark">@book.Genre</span>
                                            }
                                        </td>
                                        <td>
                                            <strong>R @book.Price.ToString("0.00")</strong>
                                        </td>
                                        <td>
                                            @if (book.StockQuantity <= 5)
                                            {
                                                <span class="badge bg-danger">@book.StockQuantity</span>
                                            }
                                            else if (book.StockQuantity <= 10)
                                            {
                                                <span class="badge bg-warning">@book.StockQuantity</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-success">@book.StockQuantity</span>
                                            }
                                        </td>
                                        <td>
                                            @if (book.IsAvailable)
                                            {
                                                <span class="badge bg-success">
                                                    <i class="fas fa-check me-1"></i>Available
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-danger">
                                                    <i class="fas fa-times me-1"></i>Unavailable
                                                </span>
                                            }
                                        </td>
                                        <td>
                                            @book.CreatedDate.ToString("MMM dd, yyyy")
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a href="@Url.Action("Details", "Books", new { id = book.BookId })" 
                                                   class="btn btn-outline-primary" title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                <a href="@Url.Action("Edit", "Books", new { id = book.BookId })" 
                                                   class="btn btn-outline-warning" title="Edit Book">
                                                    <i class="fas fa-edit"></i>
                                                </a>
                                                <a href="@Url.Action("Delete", "Books", new { id = book.BookId })" 
                                                   class="btn btn-outline-danger" title="Delete Book" 
                                                   onclick="return confirm('Are you sure you want to delete this book?')">
                                                    <i class="fas fa-trash"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#booksTable').DataTable({
                responsive: true,
                order: [[7, 'desc']], // Sort by Created Date descending
                pageLength: 25,
                language: {
                    search: "Search books:",
                    lengthMenu: "Show _MENU_ books per page",
                    info: "Showing _START_ to _END_ of _TOTAL_ books",
                    paginate: {
                        first: "First",
                        last: "Last",
                        next: "Next",
                        previous: "Previous"
                    }
                }
            });
        });
    </script>
}