@model WebApplication1.Models.Book

@{
    ViewBag.Title = "Add New Book";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="mb-0">
                        <i class="bi bi-book"></i> Add New Book
                    </h2>
                </div>
                <div class="card-body">
                    @using (Html.BeginForm("Create", "Books", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
                    {
                        @Html.AntiForgeryToken()
                        
                        @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter book title" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter author name" } })
                                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Publisher, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Publisher, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter publisher name" } })
                                    @Html.ValidationMessageFor(model => model.Publisher, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.PublicationYear, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.PublicationYear, new { htmlAttributes = new { @class = "form-control", placeholder = "YYYY", min = "1900", max = DateTime.Now.Year } })
                                    @Html.ValidationMessageFor(model => model.PublicationYear, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter ISBN number" } })
                                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
                                    <div class="input-group">
                                        <span class="input-group-text">R</span>
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00", step = "0.01", min = "0" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter stock quantity", min = "0" } })
                                    @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "form-label" })
                                    @Html.DropDownListFor(model => model.Category, new SelectList(new[] {
                                        "Fiction", "Non-Fiction", "Children", "Educational", 
                                        "Business", "Technology", "Health", "History", 
                                        "Science", "Art", "Religion", "Biography"
                                    }), "-- Select Category --", new { @class = "form-select" })
                                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g., Mystery, Romance, Fantasy" } })
                                    @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    @Html.LabelFor(model => model.CoverImageUrl, htmlAttributes: new { @class = "form-label" })
                                    @Html.EditorFor(model => model.CoverImageUrl, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter image URL or upload image" } })
                                    @Html.ValidationMessageFor(model => model.CoverImageUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4", placeholder = "Enter book description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(model => model.IsAvailable, new { @class = "form-check-input" })
                                        @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "form-check-label" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <div class="form-check">
                                        @Html.CheckBoxFor(model => model.IsFeatured, new { @class = "form-check-input" })
                                        @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "form-check-label" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Index", "Books")" class="btn btn-secondary me-md-2">
                                <i class="bi bi-arrow-left"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle"></i> Create Book
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Add client-side validation enhancement
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Preview image URL
        document.getElementById('CoverImageUrl').addEventListener('input', function() {
            var url = this.value;
            if (url && url.match(/\.(jpg|jpeg|png|gif)$/i)) {
                // You could add image preview here if needed
                console.log('Valid image URL:', url);
            }
        });
    </script>
}