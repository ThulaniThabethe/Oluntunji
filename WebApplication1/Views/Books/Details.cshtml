@model WebApplication1.Models.Book
@{
    ViewBag.Title = $"{@Model.Title} - Connect2us";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")" class="text-decoration-none">
                <i class="fas fa-home me-1"></i>Home
            </a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Books")" class="text-decoration-none">
                <i class="fas fa-book me-1"></i>Books
            </a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
        </ol>
    </nav>

    <div class="row">
        <!-- Book Image and Basic Info -->
        <div class="col-lg-4 mb-4">
            <div class="card shadow-lg border-0">
                <div class="card-body p-4">
                    @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
                    {
                        <img src="@Model.CoverImageUrl" class="img-fluid rounded-3 mb-3" alt="@Model.Title" 
                             style="width: 100%; height: 400px; object-fit: cover;" 
                             onerror="this.src='https://via.placeholder.com/300x450?text=No+Image'">
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/300x450?text=No+Image" class="img-fluid rounded-3 mb-3" alt="@Model.Title" 
                             style="width: 100%; height: 400px; object-fit: cover;">
                    }
                    
                    <!-- Stock Status -->
                    @if (Model.IsAvailable)
                    {
                        <div class="alert alert-success alert-sm">
                            <i class="fas fa-check-circle me-2"></i>
                            <strong>In Stock</strong> - @Model.StockQuantity copies available
                        </div>
                        
                        @if (Model.StockQuantity <= 5)
                        {
                            <div class="alert alert-warning alert-sm">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Only @Model.StockQuantity left - Order soon!
                            </div>
                        }
                    }
                    else
                    {
                        <div class="alert alert-danger alert-sm">
                            <i class="fas fa-times-circle me-2"></i>
                            <strong>Out of Stock</strong> - Check back soon
                        </div>
                    }

                    <!-- Action Buttons -->
                    <div class="d-grid gap-2">
                        @if (Model.IsAvailable)
                        {
                            <button type="button" class="btn btn-primary btn-lg" id="addToCart">
                                <i class="fas fa-cart-plus me-2"></i>Add to Cart
                            </button>
                            
                            <button type="button" class="btn btn-outline-secondary" id="addToWishlist">
                                <i class="fas fa-heart me-2"></i>Add to Wishlist
                            </button>
                        }
                        else
                        {
                            <button type="button" class="btn btn-outline-primary" id="notifyWhenAvailable">
                                <i class="fas fa-bell me-2"></i>Notify When Available
                            </button>
                        }
                        
                        <button type="button" class="btn btn-outline-secondary" onclick="window.history.back()">
                            <i class="fas fa-arrow-left me-2"></i>Back to Books
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Book Details -->
        <div class="col-lg-8">
            <div class="card shadow-lg border-0 mb-4">
                <div class="card-body p-5">
                    <!-- Title and Author -->
                    <div class="mb-4">
                        <h1 class="display-5 fw-bold text-dark mb-2">@Model.Title</h1>
                        <h4 class="text-muted mb-3">
                            <i class="fas fa-user-edit me-2"></i>by @Model.Author
                        </h4>
                        
                        <!-- Badges -->
                        <div class="mb-3">
                            <span class="badge bg-primary fs-6 me-2">
                                <i class="fas fa-tag me-1"></i>@Model.Category
                            </span>
                            @if (!string.IsNullOrEmpty(Model.Genre))
                            {
                                <span class="badge bg-secondary fs-6 me-2">
                                    <i class="fas fa-bookmark me-1"></i>@Model.Genre
                                </span>
                            }
                            @if (Model.IsFeatured)
                            {
                                <span class="badge bg-warning text-dark fs-6">
                                    <i class="fas fa-star me-1"></i>Featured Book
                                </span>
                            }
                        </div>
                    </div>

                    <!-- Price -->
                    <div class="mb-4">
                        <div class="d-flex align-items-center">
                            <span class="display-6 fw-bold text-success me-3">R @Model.Price.ToString("0.00")</span>
                            @if (Model.Price > 100)
                            {
                                <span class="badge bg-success">Great Value</span>
                            }
                        </div>
                    </div>

                    <!-- Book Details Grid -->
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="detail-item mb-3">
                                <h6 class="text-muted mb-1">
                                    <i class="fas fa-building me-2"></i>Publisher
                                </h6>
                                <p class="mb-0 fw-semibold">@Model.Publisher</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item mb-3">
                                <h6 class="text-muted mb-1">
                                    <i class="fas fa-calendar me-2"></i>Publication Year
                                </h6>
                                <p class="mb-0 fw-semibold">@Model.PublicationYear</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item mb-3">
                                <h6 class="text-muted mb-1">
                                    <i class="fas fa-barcode me-2"></i>ISBN
                                </h6>
                                <p class="mb-0 fw-semibold">@Model.ISBN</p>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="detail-item mb-3">
                                <h6 class="text-muted mb-1">
                                    <i class="fas fa-store me-2"></i>Seller
                                </h6>
                                <p class="mb-0 fw-semibold">
                                    @if (Model.Seller != null)
                                    {
                                        @:@Model.Seller.FirstName @Model.Seller.LastName
                                    }
                                    else
                                    {
                                        @:Connect2us
                                    }
                                </p>
                            </div>
                        </div>
                    </div>

                    <!-- Description -->
                    @if (!string.IsNullOrEmpty(Model.Description))
                    {
                        <div class="mb-4">
                            <h5 class="fw-bold mb-3">
                                <i class="fas fa-align-left me-2"></i>Description
                            </h5>
                            <div class="description-content" style="line-height: 1.8;">
                                @Html.Raw(System.Text.RegularExpressions.Regex.Replace(
                                    Model.Description.Replace("\n", "<br>"), 
                                    @"(https?://[^\s]+)", 
                                    "<a href=\"$1\" target=\"_blank\" class=\"text-decoration-none\">$1</a>"))
                            </div>
                        </div>
                    }

                    <!-- Book Stats -->
                    <div class="row mb-4">
                        <div class="col-4 text-center">
                            <div class="stat-item">
                                <h4 class="text-primary mb-1">
                                    <i class="fas fa-eye me-1"></i>@Model.ViewCount
                                </h4>
                                <small class="text-muted">Views</small>
                            </div>
                        </div>
                        <div class="col-4 text-center">
                            <div class="stat-item">
                                <h4 class="text-success mb-1">
                                    <i class="fas fa-shopping-cart me-1"></i>@Model.SoldCount
                                </h4>
                                <small class="text-muted">Sold</small>
                            </div>
                        </div>
                        <div class="col-4 text-center">
                            <div class="stat-item">
                                <h4 class="text-warning mb-1">
                                    <i class="fas fa-star me-1"></i>@(Model.Reviews?.Any() == true ? Model.Reviews.Average(r => r.Rating).ToString("0.0") : "0.0")
                                </h4>
                                <small class="text-muted">Rating</small>
                            </div>
                        </div>
                    </div>

                    <!-- Last Updated -->
                    <div class="text-muted small">
                        <i class="fas fa-clock me-1"></i>
                        Last updated: @Model.LastUpdatedDate.ToString("MMMM dd, yyyy")
                    </div>
                </div>
            </div>

            <!-- Reviews Section -->
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                <div class="card shadow-lg border-0 mb-4">
                    <div class="card-header bg-light">
                        <h5 class="mb-0">
                            <i class="fas fa-comments me-2"></i>Customer Reviews (@Model.Reviews.Count)
                        </h5>
                    </div>
                    <div class="card-body p-4">
                        @foreach (var review in Model.Reviews.OrderByDescending(r => r.CreatedDate).Take(3))
                        {
                            <div class="review-item mb-4 pb-3 border-bottom">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div>
                                        <h6 class="mb-1 fw-bold">@review.User.FirstName @review.User.LastName</h6>
                                        <div class="rating-stars">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                <i class="fas fa-star @(i <= review.Rating ? "text-warning" : "text-muted")"></i>
                                            }
                                            <small class="text-muted ms-2">@review.Rating/5</small>
                                        </div>
                                    </div>
                                    <small class="text-muted">@review.CreatedDate.ToString("MMM dd, yyyy")</small>
                                </div>
                                @if (!string.IsNullOrEmpty(review.Comment))
                                {
                                    <p class="mb-0">@review.Comment</p>
                                }
                            </div>
                        }
                        
                        @if (Model.Reviews.Count > 3)
                        {
                            <div class="text-center">
                                <button type="button" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-plus me-1"></i>View All Reviews
                                </button>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Related Books -->
            <div class="card shadow-lg border-0">
                <div class="card-header bg-light">
                    <h5 class="mb-0">
                        <i class="fas fa-book-open me-2"></i>You Might Also Like
                    </h5>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        @* This would typically show related books from the same category/author *@
                        @for (int i = 0; i < 3; i++)
                        {
                            <div class="col-md-4">
                                <div class="card border-0 shadow-sm">
                                    <img src="https://via.placeholder.com/150x200?text=Related+Book" class="card-img-top" alt="Related Book">
                                    <div class="card-body p-3">
                                        <h6 class="card-title small">Related Book Title</h6>
                                        <p class="card-text small text-muted">Similar Author</p>
                                        <p class="card-text small fw-bold text-primary">R 199.99</p>
                                        <a href="#" class="btn btn-outline-primary btn-sm w-100">View</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Add to cart functionality
            $('#addToCart').click(function() {
                const $btn = $(this);
                const originalText = $btn.html();
                
                $btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Adding...').prop('disabled', true);
                
                setTimeout(function() {
                    $btn.html('<i class="fas fa-check me-2"></i>Added to Cart!').removeClass('btn-primary').addClass('btn-success');
                    
                    setTimeout(function() {
                        $btn.html(originalText).prop('disabled', false).removeClass('btn-success').addClass('btn-primary');
                    }, 2000);
                    
                    showToast('Success', '"@Model.Title" has been added to your cart!', 'success');
                }, 1000);
            });

            // Add to wishlist functionality
            $('#addToWishlist').click(function() {
                const $btn = $(this);
                const originalText = $btn.html();
                
                $btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Adding...').prop('disabled', true);
                
                setTimeout(function() {
                    $btn.html('<i class="fas fa-heart me-2"></i>Added to Wishlist!').removeClass('btn-outline-secondary').addClass('btn-outline-danger');
                    
                    setTimeout(function() {
                        $btn.html(originalText).prop('disabled', false).removeClass('btn-outline-danger').addClass('btn-outline-secondary');
                    }, 2000);
                    
                    showToast('Success', '"@Model.Title" has been added to your wishlist!', 'info');
                }, 1000);
            });

            // Notify when available functionality
            $('#notifyWhenAvailable').click(function() {
                const $btn = $(this);
                const originalText = $btn.html();
                
                $btn.html('<i class="fas fa-spinner fa-spin me-2"></i>Setting up...').prop('disabled', true);
                
                setTimeout(function() {
                    $btn.html('<i class="fas fa-bell me-2"></i>Notification Set!').removeClass('btn-outline-primary').addClass('btn-success');
                    
                    setTimeout(function() {
                        $btn.html(originalText).prop('disabled', false).removeClass('btn-success').addClass('btn-outline-primary');
                    }, 2000);
                    
                    showToast('Success', 'You will be notified when "@Model.Title" becomes available!', 'info');
                }, 1000);
            });
        });

        function showToast(title, message, type = 'info') {
            // Create toast element
            const toastHtml = `
                <div class="toast align-items-center text-white bg-${type === 'success' ? 'success' : type === 'error' ? 'danger' : 'primary'} border-0" role="alert">
                    <div class="d-flex">
                        <div class="toast-body">
                            <strong>${title}</strong><br>${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
                    </div>
                </div>
            `;
            
            // Add to toast container
            $('#toastContainer').append(toastHtml);
            
            // Show toast
            const toast = new bootstrap.Toast($('#toastContainer .toast').last()[0]);
            toast.show();
            
            // Remove after hidden
            $('#toastContainer .toast').last().on('hidden.bs.toast', function() {
                $(this).remove();
            });
        }
    </script>
    
    <style>
        .breadcrumb {
            background: transparent;
            padding: 0;
        }
        
        .breadcrumb-item a {
            color: #6c757d;
            text-decoration: none;
        }
        
        .breadcrumb-item a:hover {
            color: #495057;
        }
        
        .detail-item h6 {
            font-size: 0.9rem;
            font-weight: 600;
            color: #6c757d;
        }
        
        .detail-item p {
            font-size: 1rem;
            color: #212529;
        }
        
        .stat-item {
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 10px;
        }
        
        .review-item:last-child {
            border-bottom: none !important;
            margin-bottom: 0 !important;
            padding-bottom: 0 !important;
        }
        
        .rating-stars {
            display: inline-flex;
            align-items: center;
        }
        
        .rating-stars i {
            font-size: 0.9rem;
            margin-right: 2px;
        }
        
        .description-content {
            font-size: 1.1rem;
            line-height: 1.8;
        }
        
        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
        }
        
        .hero-image {
            animation: float 3s ease-in-out infinite;
        }
        
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0px); }
        }
    </style>
}

<!-- Toast Container -->
<div id="toastContainer" class="toast-container"></div>