@model List<WebApplication1.Models.Order>
@{
    ViewBag.Title = "Shipped Orders";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Shipped Orders</h2>
                <div>
                    @Html.ActionLink("All Orders", "Manage", null, new { @class = "btn btn-primary me-2" })
                    @Html.ActionLink("Pending Orders", "PendingOrders", null, new { @class = "btn btn-warning" })
                </div>
            </div>

            @if (Model != null && Model.Any())
            {
                <div class="alert alert-info mb-4">
                    <strong>@Model.Count</strong> orders have been shipped.
                </div>

                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="shippedOrdersTable">
                        <thead class="table-dark">
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Shipped Date</th>
                                <th>Total Amount</th>
                                <th>Items</th>
                                <th>Days Since Shipped</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                var daysSinceShipped = (DateTime.Now - order.OrderDate).Days;
                                <tr>
                                    <td>
                                        <strong>@order.OrderId</strong>
                                    </td>
                                    <td>
                                        @if (order.Customer != null)
                                        {
                                            <div>
                                                <strong>@order.Customer.Name</strong>
                                                <br /><small class="text-muted">@order.Customer.Email</small>
                                                <br /><small class="text-muted">@order.Customer.Phone</small>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">Customer info not available</span>
                                        }
                                    </td>
                                    <td>
                                        @order.OrderDate.ToString("yyyy-MM-dd HH:mm")
                                    </td>
                                    <td>
                                        <strong>@order.TotalAmount.ToString("C")</strong>
                                    </td>
                                    <td>
                                        @if (order.OrderItems != null && order.OrderItems.Any())
                                        {
                                            <div>
                                                <span>@order.OrderItems.Count item(s)</span>
                                                <button type="button" class="btn btn-sm btn-link" onclick="showOrderItems(@order.OrderId)">
                                                    View Items
                                                </button>
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No items</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge @(daysSinceShipped > 7 ? "bg-warning text-dark" : "bg-info")">
                                            @daysSinceShipped day@(daysSinceShipped != 1 ? "s" : "")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group-vertical btn-group-sm w-100">
                                            @Html.ActionLink("View Details", "Details", new { id = order.OrderId }, new { @class = "btn btn-outline-primary btn-sm mb-1" })
                                            
                                            <button type="button" class="btn btn-success btn-sm mb-1" onclick="updateOrderStatus(@order.OrderId, 'Delivered')">
                                                Mark as Delivered
                                            </button>
                                            
                                            <button type="button" class="btn btn-outline-info btn-sm mb-1" onclick="contactCustomer(@order.CustomerId)">
                                                Contact Customer
                                            </button>
                                            
                                            <button type="button" class="btn btn-outline-secondary btn-sm" onclick="printShippingLabel(@order.OrderId)">
                                                Print Label
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-success" role="alert">
                    <h4 class="alert-heading">No Shipped Orders</h4>
                    <p>There are currently no shipped orders.</p>
                </div>
            }
        </div>
    </div>
</div>

<!-- Order Items Modal -->
<div class="modal fade" id="orderItemsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Items</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderItemsContent">
                <!-- Content will be loaded here -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#shippedOrdersTable').DataTable({
                order: [[2, 'desc']], // Sort by date descending (newest first)
                pageLength: 25
            });
        });

        function showOrderItems(orderId) {
            $.ajax({
                url: '@Url.Action("GetOrderItems", "Orders")',
                type: 'GET',
                data: { orderId: orderId },
                success: function(data) {
                    if (data.success) {
                        var html = '<div class="table-responsive">';
                        html += '<table class="table table-sm">';
                        html += '<thead><tr><th>Book Title</th><th>Quantity</th><th>Price</th><th>Subtotal</th></tr></thead>';
                        html += '<tbody>';
                        
                        data.items.forEach(function(item) {
                            html += '<tr>';
                            html += '<td>' + item.bookTitle + '</td>';
                            html += '<td>' + item.quantity + '</td>';
                            html += '<td>' + item.price + '</td>';
                            html += '<td>' + item.subtotal + '</td>';
                            html += '</tr>';
                        });
                        
                        html += '</tbody></table></div>';
                        $('#orderItemsContent').html(html);
                        $('#orderItemsModal').modal('show');
                    } else {
                        alert('Error loading order items: ' + data.message);
                    }
                },
                error: function() {
                    alert('Error loading order items. Please try again.');
                }
            });
        }

        function updateOrderStatus(orderId, newStatus) {
            if (confirm(`Are you sure you want to mark this order as ${newStatus}?`)) {
                $.ajax({
                    url: '@Url.Action("UpdateOrderStatus", "Orders")',
                    type: 'POST',
                    data: {
                        orderId: orderId,
                        newStatus: newStatus,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            alert(result.message);
                            location.reload();
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function() {
                        alert('Error updating order status. Please try again.');
                    }
                });
            }
        }

        function contactCustomer(customerId) {
            // This would typically open a contact form or send an email
            alert('Contact customer functionality would be implemented here. Customer ID: ' + customerId);
        }

        function printShippingLabel(orderId) {
            // This would typically generate and print a shipping label
            window.open('@Url.Action("PrintShippingLabel", "Orders")?orderId=' + orderId, '_blank');
        }
    </script>
}