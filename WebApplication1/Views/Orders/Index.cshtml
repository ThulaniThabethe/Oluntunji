@model List<WebApplication1.Models.Order>
@{
    ViewBag.Title = "Orders";
    var currentUserRole = ViewBag.CurrentUserRole ?? "Customer";
    var isAdminOrEmployee = currentUserRole == "Admin" || currentUserRole == "Employee";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2>Orders</h2>
                <div>
                    @if (isAdminOrEmployee)
                    {
                        @Html.ActionLink("Manage Orders", "Manage", null, new { @class = "btn btn-primary me-2" })
                        @Html.ActionLink("Pending Orders", "PendingOrders", null, new { @class = "btn btn-warning me-2" })
                        @Html.ActionLink("Shipped Orders", "ShippedOrders", null, new { @class = "btn btn-info" })
                    }
                    else
                    {
                        @Html.ActionLink("Order History", "OrderHistory", null, new { @class = "btn btn-outline-primary" })
                    }
                </div>
            </div>

            @if (Model != null && Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover" id="ordersTable">
                        <thead class="table-dark">
                            <tr>
                                <th>Order ID</th>
                                @if (isAdminOrEmployee)
                                {
                                    <th>Customer</th>
                                }
                                <th>Date</th>
                                <th>Total Amount</th>
                                <th>Status</th>
                                <th>Payment Status</th>
                                <th>Items</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td>
                                        <strong>@order.OrderId</strong>
                                    </td>
                                    @if (isAdminOrEmployee)
                                    {
                                        <td>
                                            @if (order.Customer != null)
                                            {
                                                <div><strong>@order.Customer.FullName</strong><br /><small class="text-muted">@order.Customer.Email</small></div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Customer info not available</span>
                                            }
                                        </td>
                                    }
                                    <td>
                                        @order.OrderDate.ToString("yyyy-MM-dd HH:mm")
                                    </td>
                                    <td>
                                        <strong>@order.TotalAmount.ToString("C")</strong>
                                    </td>
                                    <td>
                                        @{
                                            string statusClass;
                                            switch (order.OrderStatus)
                                            {
                                                case "Pending":
                                                    statusClass = "badge bg-warning text-dark";
                                                    break;
                                                case "Confirmed":
                                                    statusClass = "badge bg-info";
                                                    break;
                                                case "Shipped":
                                                    statusClass = "badge bg-primary";
                                                    break;
                                                case "Delivered":
                                                    statusClass = "badge bg-success";
                                                    break;
                                                case "Cancelled":
                                                    statusClass = "badge bg-danger";
                                                    break;
                                                default:
                                                    statusClass = "badge bg-secondary";
                                                    break;
                                            }
                                        }
                                        <span class="@statusClass">@order.OrderStatus</span>
                                    </td>
                                    <td>
                                        @{
                                            string paymentStatusClass;
                                            switch (order.PaymentStatus)
                                            {
                                                case "Pending":
                                                    paymentStatusClass = "badge bg-warning text-dark";
                                                    break;
                                                case "Paid":
                                                    paymentStatusClass = "badge bg-success";
                                                    break;
                                                case "Failed":
                                                    paymentStatusClass = "badge bg-danger";
                                                    break;
                                                case "Refunded":
                                                    paymentStatusClass = "badge bg-secondary";
                                                    break;
                                                default:
                                                    paymentStatusClass = "badge bg-secondary";
                                                    break;
                                            }
                                        }
                                        <span class="@paymentStatusClass">@order.PaymentStatus</span>
                                    </td>
                                    <td>
                                        @if (order.OrderItems != null && order.OrderItems.Any())
                                        {
                                            <span>@order.OrderItems.Count item(s)</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No items</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            @Html.ActionLink("View Details", "Details", new { id = order.OrderId }, new { @class = "btn btn-outline-primary btn-sm" })
                                            
                                            @if (order.OrderStatus == "Pending" && !isAdminOrEmployee)
                                            {
                                                <button type="button" class="btn btn-outline-danger btn-sm" onclick="cancelOrder(@order.OrderId)">Cancel</button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info" role="alert">
                    <h4 class="alert-heading">No Orders Found</h4>
                    <p>
                        @if (isAdminOrEmployee)
                        {
                            @:There are no orders in the system yet.
                        }
                        else
                        {
                            @:You haven't placed any orders yet. Start shopping and place your first order!
                        }
                    </p>
                    @if (!isAdminOrEmployee)
                    {
                        <hr>
                        <a href="@Url.Action("Index", "Browse")" class="btn btn-primary">Start Shopping</a>
                    }
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('#ordersTable').DataTable({
                order: [[1, 'desc']], // Sort by date descending (column index 1 for customers, 2 for admins)
                pageLength: 25
            });
        });

        function cancelOrder(orderId) {
            if (confirm('Are you sure you want to cancel this order?')) {
                $.ajax({
                    url: '@Url.Action("CancelOrder", "Orders")',
                    type: 'POST',
                    data: {
                        orderId: orderId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            alert(result.message);
                            location.reload();
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function() {
                        alert('Error cancelling order. Please try again.');
                    }
                });
            }
        }
    </script>
}